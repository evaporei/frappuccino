// Generated by CoffeeScript 2.4.1
(function() {
  var FULFILLED, PENDING, Promise, REJECTED;

  PENDING = 'PENDING';

  FULFILLED = 'FULFILLED';

  REJECTED = 'REJECTED';

  Promise = class Promise {
    constructor(executor) {
      this.fulfill = this.fulfill.bind(this);
      this.reject = this.reject.bind(this);
      this.state = PENDING;
      this.doResolve(executor);
    }

    doResolve(executor) {
      return executor(this.fulfill, this.reject);
    }

    fulfill(value) {
      this.state = FULFILLED;
      return this.value = value;
    }

    reject(reason) {
      this.state = REJECTED;
      return this.value = reason;
    }

    then(onFulfilled, onRejected) {
      return (this.state === FULFILLED ? onFulfilled : onRejected)(this.value);
    }

  };

  module.exports = Promise;

}).call(this);
